// AUTOGENERATED DO NOT EDIT

`timescale 1ns / 1ps


module mnist_classifier(input logic [0:783] image, output logic [3:0] digit);
    logic [7:0] score [0:9];

    // Digit 0
	wire [0:1411] leaf_0;
	wire [7:0] val_count_0 [0:12];
    decision_tree_leaves_0 dtl_0 (.f(image), .leaf(leaf_0));
    leaf_counter_0 lc_0 (.l(leaf_0), .val(val_count_0));
    counter_adder ca_0 (.val(val_count_0), .score(score[0]));


    // Digit 1
	wire [0:1154] leaf_1;
	wire [7:0] val_count_1 [0:12];
    decision_tree_leaves_1 dtl_1 (.f(image), .leaf(leaf_1));
    leaf_counter_1 lc_1 (.l(leaf_1), .val(val_count_1));
    counter_adder ca_1 (.val(val_count_1), .score(score[1]));


    // Digit 2
	wire [0:1374] leaf_2;
	wire [7:0] val_count_2 [0:12];
    decision_tree_leaves_2 dtl_2 (.f(image), .leaf(leaf_2));
    leaf_counter_2 lc_2 (.l(leaf_2), .val(val_count_2));
    counter_adder ca_2 (.val(val_count_2), .score(score[2]));


    // Digit 3
	wire [0:1472] leaf_3;
	wire [7:0] val_count_3 [0:12];
    decision_tree_leaves_3 dtl_3 (.f(image), .leaf(leaf_3));
    leaf_counter_3 lc_3 (.l(leaf_3), .val(val_count_3));
    counter_adder ca_3 (.val(val_count_3), .score(score[3]));


    // Digit 4
	wire [0:1315] leaf_4;
	wire [7:0] val_count_4 [0:12];
    decision_tree_leaves_4 dtl_4 (.f(image), .leaf(leaf_4));
    leaf_counter_4 lc_4 (.l(leaf_4), .val(val_count_4));
    counter_adder ca_4 (.val(val_count_4), .score(score[4]));


    // Digit 5
	wire [0:1401] leaf_5;
	wire [7:0] val_count_5 [0:12];
    decision_tree_leaves_5 dtl_5 (.f(image), .leaf(leaf_5));
    leaf_counter_5 lc_5 (.l(leaf_5), .val(val_count_5));
    counter_adder ca_5 (.val(val_count_5), .score(score[5]));


    // Digit 6
	wire [0:1336] leaf_6;
	wire [7:0] val_count_6 [0:12];
    decision_tree_leaves_6 dtl_6 (.f(image), .leaf(leaf_6));
    leaf_counter_6 lc_6 (.l(leaf_6), .val(val_count_6));
    counter_adder ca_6 (.val(val_count_6), .score(score[6]));


    // Digit 7
	wire [0:1279] leaf_7;
	wire [7:0] val_count_7 [0:12];
    decision_tree_leaves_7 dtl_7 (.f(image), .leaf(leaf_7));
    leaf_counter_7 lc_7 (.l(leaf_7), .val(val_count_7));
    counter_adder ca_7 (.val(val_count_7), .score(score[7]));


    // Digit 8
	wire [0:1497] leaf_8;
	wire [7:0] val_count_8 [0:12];
    decision_tree_leaves_8 dtl_8 (.f(image), .leaf(leaf_8));
    leaf_counter_8 lc_8 (.l(leaf_8), .val(val_count_8));
    counter_adder ca_8 (.val(val_count_8), .score(score[8]));


    // Digit 9
	wire [0:1347] leaf_9;
	wire [7:0] val_count_9 [0:12];
    decision_tree_leaves_9 dtl_9 (.f(image), .leaf(leaf_9));
    leaf_counter_9 lc_9 (.l(leaf_9), .val(val_count_9));
    counter_adder ca_9 (.val(val_count_9), .score(score[9]));

    // Get maximum score
    max_value_index mvi(.score(score), .digit(digit));
endmodule